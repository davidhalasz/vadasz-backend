{"version":3,"file":"static/js/599.ec0567d9.chunk.js","mappings":"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","sources":["components/ImageViewer.js","context/ImageViewerContext.js","components/dashboard/Sidebar.js","pages/Dashboard.js","shared/hooks/viewer-hook.js"],"sourcesContent":["import { useContext, useRef } from \"react\";\nimport { ImageViewerContext } from \"../context/ImageViewerContext\";\nimport { CSSTransition } from \"react-transition-group\";\nimport './ImageViewer.css'\n\n\nconst ImageViewer = (props) => {\n  const { toggleDisplay, currentImg, images, selectImage, nextImage, prevImage, display } =\n    useContext(ImageViewerContext);\n\n  const nodeRef = useRef(null);\n\n  return (\n    <CSSTransition\n      in={display}\n      timeout={400}\n      classNames=\"transitionode\"\n      unmountOnExit\n      appear\n      mountOnEnter\n      nodeRef={nodeRef}\n    >\n    <div ref={nodeRef} dismissible className=\" absolute max-h-screen top-0 left-0 bottom-0 right-0 bg-black/90 backdrop-blur-md flex place-center\">\n      <button\n        className=\"absolute text-white z-10 top-10 right-10\"\n        type=\"button\"\n        onClick={toggleDisplay}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth=\"1.5\"\n          stroke=\"currentColor\"\n          className=\"w-10 h-10\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      </button>\n      <div className=\"relative w-full h-full pt-8 text-white\">\n        <div className=\"mx-auto w-full h-5/6 flex justify-between\">\n          <div className=\"flex items-center\">\n            <svg\n              onClick={prevImage}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth=\"1.5\"\n              stroke=\"currentColor\"\n              className=\"w-10 h-10 ml-5\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n              />\n            </svg>\n          </div>\n\n          <img\n            className=\"h-full pb-2\"\n            src={`${process.env.REACT_APP_ASSET_URL}/${currentImg}`}\n            alt=\"current\"\n          />\n\n          <div className=\"flex items-center\">\n            <svg\n              onClick={nextImage}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth=\"1.5\"\n              stroke=\"currentColor\"\n              className=\"w-10 h-10 mr-5\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M8.25 4.5l7.5 7.5-7.5 7.5\"\n              />\n            </svg>\n          </div>\n        </div>\n        <div className=\"h-1/6 flex flex-row gap-1 p-1 w-fit mx-auto\">\n          {images.map((img, index) => (\n            <img\n              key={index}\n              onClick={() => selectImage(img)}\n              className=\"h-full aspect-square object-cover\"\n              src={`${process.env.REACT_APP_ASSET_URL}/${img}`}\n              alt=\"thumbnails\"\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n    </CSSTransition>\n  );\n};\n\nexport default ImageViewer;\n","import { createContext } from \"react\";\n\nexport const ImageViewerContext = createContext({\n    display: false,\n    currentImg: \"\",\n    images: [],\n    toggleDisplay: () => {},\n    selectImage: () => {},\n    nextImage: () => {},\n    prevImage: () => {},\n});","import { NavLink, useNavigate } from \"react-router-dom\";\n\nconst Sidebar = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"h-full w-full bg-customYellow p-3 text-customBlue font-bold flex flex-col justify-between\">\n      <div className=\"min-w-full\">\n        <button className=\"flex mb-10\" onClick={() => navigate(\"/\")}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            className=\"w-6 h-6\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18\"\n            />\n          </svg>\n          <span className=\"pl-2\">Vissza a főoldalra</span>\n        </button>\n        <NavLink to={\"/kezelofelulet/feltoltott-hirdetesek\"}>\n          <button className=\"w-full p-3 backdrop-opacity-10 bg-black/10 rounded-md text-center my-2\">\n            Hirdetéseim\n          </button>\n        </NavLink>\n        <NavLink to={\"/kezelofelulet/uj-hirdetes\"}>\n          <button className=\"w-full p-3 backdrop-opacity-10 bg-black/10 rounded-md text-center my-2\">\n            Új hirdetés\n          </button>\n        </NavLink>\n        <NavLink to={\"/kezelofelulet/adataim\"}>\n          <button className=\"w-full p-3 backdrop-opacity-10 bg-black/10 rounded-md text-center my-2\">\n            Profil adatok\n          </button>\n        </NavLink>\n      </div>\n      <button className=\"flex mb-4 min-w-full\" onClick={() => navigate(\"/\")}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth=\"1.5\"\n          stroke=\"currentColor\"\n          className=\"w-6 h-6\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15m3 0l3-3m0 0l-3-3m3 3H9\"\n          />\n        </svg>\n\n        <span className=\"pl-2\">Kijelentkezés</span>\n      </button>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../components/dashboard/Sidebar\";\nimport { getCurrentUser } from \"../features/authSlice\";\nimport { ImageViewerContext } from \"../context/ImageViewerContext\";\nimport { useViewer } from \"../shared/hooks/viewer-hook\";\nimport ImageViewer from \"../components/ImageViewer\";\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { isError } = useSelector((state) => state.auth);\n  const {\n    display,\n    currentImg,\n    images,\n    toggleDisplay,\n    selectImage,\n    nextImage,\n    prevImage,\n  } = useViewer();\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isError) {\n      navigate(\"/\");\n    }\n  }, [isError, navigate]);\n\n  return (\n    <ImageViewerContext.Provider\n      value={{\n        display: display,\n        currentImg: currentImg,\n        images: images,\n        toggleDisplay: toggleDisplay,\n        selectImage: selectImage,\n        nextImage: nextImage,\n        prevImage: prevImage,\n      }}\n    >\n      <div className=\"grid grid-cols-6 h-screen w-full\">\n        <Sidebar />\n        <div className=\"h-full w-full col-span-5 bg-white\">\n          <Outlet />\n        </div>\n        {display && <ImageViewer />}\n      </div>\n    </ImageViewerContext.Provider>\n  );\n};\n\nexport default Dashboard;\n","import { useCallback, useState } from \"react\";\n\nexport const useViewer = () => {\n  const [display, setDisplay] = useState(false);\n  const [currentImg, setCurrentImg] = useState(\"\");\n  const [images, setImages] = useState([]);\n\n  const toggleDisplay = useCallback(() => {\n    setDisplay(!display);\n  }, [display]);\n\n  console.log(display);\n\n  const selectImage = useCallback((imageValue, imagesList) => {\n    setCurrentImg(imageValue);\n    if (imagesList) {\n      setImages([...imagesList]);\n    }\n  }, []);\n\n  const nextImage = useCallback(() => {\n    let currentIndex = images.findIndex(x => x === currentImg);\n    if(currentIndex < images.length - 1) {\n        setCurrentImg(images[currentIndex+1]);\n    }\n  }, [currentImg, images]);\n\n  const prevImage = useCallback(() => {\n    let currentIndex = images.findIndex(x => x === currentImg);\n    if(currentIndex > 0) {\n        setCurrentImg(images[currentIndex-1]);\n    }\n  }, [currentImg, images]);\n\n  return { display, currentImg, images, toggleDisplay, selectImage, nextImage, prevImage };\n};\n"],"names":["props","useContext","ImageViewerContext","toggleDisplay","currentImg","images","selectImage","nextImage","prevImage","display","nodeRef","useRef","CSSTransition","in","timeout","classNames","unmountOnExit","appear","mountOnEnter","ref","dismissible","className","type","onClick","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","src","process","alt","map","img","index","createContext","navigate","useNavigate","to","dispatch","useDispatch","isError","useSelector","state","auth","useViewer","useEffect","getCurrentUser","value","ImageViewer","useState","setDisplay","setCurrentImg","setImages","useCallback","console","log","imageValue","imagesList","currentIndex","findIndex","x","length"],"sourceRoot":""}
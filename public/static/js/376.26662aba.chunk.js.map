{"version":3,"file":"static/js/376.26662aba.chunk.js","mappings":"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","sources":["pages/Auth/Login.js","shared/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginUser, reset } from \"../../features/authSlice\";\nimport Input from \"../../shared/FormElements/Input\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { getCurrentUser } from \"../../features/authSlice\";\n\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user, isError, isSuccess, isLoading, message } = useSelector(\n    (state) => state.auth\n  );\n  const [formState, inputHandler] = useForm(\n    {\n      username: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(user) {\n      navigate(\"/kezelofelulet/feltoltott-hirdetesek\", {replace: true});\n    }\n    dispatch(reset());\n  }, [user, isSuccess, dispatch, navigate]);\n\n  const loginSubmitHandler = (event) => {\n    event.preventDefault();\n    const username = formState.inputs.username.value;\n    const password = formState.inputs.password.value;\n    dispatch(loginUser({username, password}));\n  };\n\n  return (\n    <div>\n      <div className=\"relative grid grid-cols-2 h-screen w-full\">\n        <div className=\"h-full w-full bg-customYellow\"></div>\n        <div className=\"h-full w-full bg-customMint\"></div>\n\n        <div className=\"absolute z-10 m-auto place-self-center bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 content-fit\">\n          <div className=\"w-full text-center\">\n            {isError && <p>{message}</p>}\n            <h1 className=\"pb-4 text-2xl font-bold text-customBlue\">\n              Bejelentkezés\n            </h1>\n          </div>\n\n          <form onSubmit={loginSubmitHandler}>\n            <div className=\"mb-4\">\n              <Input\n                id=\"username\"\n                type=\"text\"\n                label=\"Felhasználónév\"\n                placeholder=\"Felhasználónév\"\n                element=\"input\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Add meg a felhasználóneved!\"\n                onInput={inputHandler}\n              />\n            </div>\n            <div className=\"mb-6\">\n              <Input\n                type=\"password\"\n                id=\"password\"\n                label=\"Jelszó\"\n                placeholder=\"Jelszó\"\n                element=\"input\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Add meg a jelszavad!\"\n                onInput={inputHandler}\n              />\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <button\n                className=\"bg-customBlue hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                type=\"submit\"\n              >\n                {isLoading ? \"Küldés...\" : \"Bejelentkezés\" }\n              </button>\n              <a\n                className=\"ml-2 inline-block align-baseline font-bold text-sm text-customGreen hover:text-blue-800\"\n                href=\"http://localhost:3000/\"\n              >\n                Elfelejtetted a jelszavad?\n              </a>\n            </div>\n            <div className=\"pt-6\">\n            <button\n                type=\"button\"\n                className=\"inline-block align-baseline font-bold text-sm text-customGreen hover:text-blue-800\"\n                onClick={() => navigate('/regisztracio')}\n              >\n                Nincs még felhasználói fiókod? Regisztrálj!\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useEffect, useReducer } from \"react\";\n\nimport { validate } from \"../util/validators\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.vaidators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value || \"\",\n    isTouched: false,\n    isValid: props.valid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, onInput, value, isValid]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      vaidators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n          !inputState.isValid && inputState.isTouched && \"border-red-500\"\n        }`}\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n          !inputState.isValid && inputState.isTouched && \"border-red-500\"\n        }`}\n        id={props.id}\n        rows={props.rows || 6}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div className=\"form-control\">\n      <label\n        className=\"block text-customBlue text-sm font-bold mb-2\"\n        htmlFor={props.id}\n      >\n        {props.label}\n      </label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && (\n        <p className=\"text-red-500\">{props.errorText}</p>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  return [formState, inputHandler];\n};\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["dispatch","useDispatch","navigate","useNavigate","useSelector","state","auth","user","isError","isSuccess","isLoading","message","useForm","username","value","isValid","password","formState","inputHandler","useEffect","getCurrentUser","replace","reset","className","onSubmit","event","preventDefault","inputs","loginUser","id","type","label","placeholder","element","validators","VALIDATOR_REQUIRE","errorText","onInput","href","onClick","inputReducer","action","val","validate","vaidators","isTouched","props","useReducer","valid","inputState","changeHandler","target","touchHandler","onChange","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","validator","trim","length","test"],"sourceRoot":""}